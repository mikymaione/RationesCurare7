<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="errAmbiguousMatch" xml:space="preserve">
    <value>Niejednoznaczne dopasowanie pomiędzy</value>
  </data>
  <data name="errArgumentExist" xml:space="preserve">
    <value>Argument "{0}" występuje już na liście.</value>
  </data>
  <data name="errConstantExist" xml:space="preserve">
    <value>Stała "{0}" występuje już na liście.</value>
  </data>
  <data name="errConstantNotExist" xml:space="preserve">
    <value>Stała "{0}" nie występuje w kolekcji.</value>
  </data>
  <data name="errCultureExtract" xml:space="preserve">
    <value>Nie można wyodrębnić separatorów specyficznych dla bieżących ustawień językowych .</value>
  </data>
  <data name="errDelegateInvCount" xml:space="preserve">
    <value>Liczność listy wywołań Delegate powinna być równa 1</value>
  </data>
  <data name="errDelegateWithTarget" xml:space="preserve">
    <value>Delegates with target nie są wspierane (być może z powodu closure).</value>
  </data>
  <data name="errDisbalanceClose" xml:space="preserve">
    <value>Brak nawiasu zamykającego.</value>
  </data>
  <data name="errDisbalanceOpen" xml:space="preserve">
    <value>Brak nawiasu otwierającego.</value>
  </data>
  <data name="errEndlessLoop" xml:space="preserve">
    <value>Niewłaściwy krok zakresu: nieskończona pętla.</value>
  </data>
  <data name="errExistOverload" xml:space="preserve">
    <value>Istnieje przeciążenie(a) z {0} argumentem(ami).</value>
  </data>
  <data name="errFunctionNoBrace" xml:space="preserve">
    <value>Po nazwie funkcji należy umieścić nawias otwierający.</value>
  </data>
  <data name="errFunctionNotExist" xml:space="preserve">
    <value>Funkcja "{0}" nie występuje w kolekcji.</value>
  </data>
  <data name="errIdentifierEmpty" xml:space="preserve">
    <value>Pusta lub null nazwa identyfikatora.</value>
  </data>
  <data name="errIdentifierFromLambda" xml:space="preserve">
    <value>Być może próbujesz importować lambda bez podania nazwy?</value>
  </data>
  <data name="errIdentifierStartsWith" xml:space="preserve">
    <value>Nieprawidłowa nazwa identyfikatora: "{0}". Nazwa powinna zaczynać się od litery lub podkreślenia.</value>
  </data>
  <data name="errIdentifierSymbol" xml:space="preserve">
    <value>Nieprawidłowy symbol "{0} 'w nazwie identyfikatora "{1} ". Tylko litery, cyfry i znak podkreślenia są dozwolone.</value>
  </data>
  <data name="errIncorrectConstr" xml:space="preserve">
    <value>Nieprawidłowa konstrukcja</value>
  </data>
  <data name="errInvalidSeparator" xml:space="preserve">
    <value>Nieprawidłowe użycie (separatora).</value>
  </data>
  <data name="errMethodBadParam" xml:space="preserve">
    <value>parametr #{0} typu '{1}'. Wszystkie parametry powinny być typu '{2}'.</value>
  </data>
  <data name="errMethodBadReturn" xml:space="preserve">
    <value>zwraca wartość typu '{0}'. Funkcja powinna zwrócić wartość typu '{1}'.</value>
  </data>
  <data name="errMethodImportFailed" xml:space="preserve">
    <value>Import zakończony niepowodzeniem: metoda</value>
  </data>
  <data name="errMethodNotFounded" xml:space="preserve">
    <value>Metoda "{0}" nie może zostać wywołana (upewnij się że jest public /  static).</value>
  </data>
  <data name="errMethodNotInstance" xml:space="preserve">
    <value>nie musi być static.</value>
  </data>
  <data name="errMethodNotRuntimeMethod" xml:space="preserve">
    <value>oczekiwano metody standard runtime (DynamicMethod nie jest wspierana).</value>
  </data>
  <data name="errMethodNotStatic" xml:space="preserve">
    <value>musi być static.</value>
  </data>
  <data name="errNeutralCulture" xml:space="preserve">
    <value>Kultura językowa '{0}' jest neutralna. Nie może być użyta do parsowania i formatowania.</value>
  </data>
  <data name="errNumberFormat" xml:space="preserve">
    <value>Nieprawidłowy format liczby:</value>
  </data>
  <data name="errNumberOverflow" xml:space="preserve">
    <value>Overflow stałej liczbowej:</value>
  </data>
  <data name="errOverloadImpossible" xml:space="preserve">
    <value>Funkcja z tymi parametrami ({0}) jest już na liście (przeciążenie nie jest możliwe).</value>
  </data>
  <data name="errRangeNotFinite" xml:space="preserve">
    <value>Niewłaściwy zakres: Początek, Koniec lub Krok nie jest skończoną wartością.</value>
  </data>
  <data name="errTabulatorWrongArgs" xml:space="preserve">
    <value>Obiekt Tabulator może być utworzony tylko dla wyrażeń z jednym lub większą liczbą argumentów.</value>
  </data>
  <data name="errTooLongRange" xml:space="preserve">
    <value>Niewłaściwy zakres: liczba iteracji nie mieści się w zakresie liczby całkowitej.</value>
  </data>
  <data name="errUnresolvedIdentifier" xml:space="preserve">
    <value>Nieznany identyfikator:</value>
  </data>
  <data name="errUnresolvedSymbol" xml:space="preserve">
    <value>Nieznany symbol:</value>
  </data>
  <data name="errWrongArgsCount" xml:space="preserve">
    <value>Niewłaściwa liczba argumentów: {0}. Oczekiwano {1} argument(ów) dla metody Evaluate().</value>
  </data>
  <data name="errWrongOverload" xml:space="preserve">
    <value>nie posiada przeciążenia z {0} argument(ami).</value>
  </data>
  <data name="errWrongRangesCount" xml:space="preserve">
    <value>Niewłaściwa liczba zakresów: {0}. Oczekiwano {1} zakres(ów) dla metody Tabulate().</value>
  </data>
  <data name="errWrongStepSign" xml:space="preserve">
    <value>Niewłaściwy krok zakresu: nieprawidłowy snak kroku.</value>
  </data>
  <data name="errWrongTargetType" xml:space="preserve">
    <value>Niewłaściwy typ obiektu docelowego: {0} (nie jest możliwe przypisanie do {1}).</value>
  </data>
  <data name="sAnd" xml:space="preserve">
    <value>oraz</value>
  </data>
  <data name="sArgument" xml:space="preserve">
    <value>Argument</value>
  </data>
  <data name="sConstant" xml:space="preserve">
    <value>Stała</value>
  </data>
  <data name="sFunction" xml:space="preserve">
    <value>Funkcja</value>
  </data>
</root>